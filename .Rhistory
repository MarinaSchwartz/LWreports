byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond_uS = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond_uS))
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond_uS = 'Cond_uS'+'Cond_mS') %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond_uS))
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond_uS_all = 'Cond_uS'+'Cond_mS') %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond_uS_all))
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond_uS = 'Cond_uS'+'Cond_mS') %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond_uS))
#minimum annual geometric means
mins = c("Minimum Annual Geometric Mean", min(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), min(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
min(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
min(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]),
min(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
min(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]),
min(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#maximum annual geometric means
maxs = c("Maximum Annual Geometric Mean", max(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), max(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
max(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
max(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), max(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
max(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), max(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#grand geometric means
ggmean = c("Grand Geometric Mean", gmean(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), gmean(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
gmean(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
gmean(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), gmean(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
gmean(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), gmean(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#year counts
n = c("n", length(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), length(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
length(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
length(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), length(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
length(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), length(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#add row names to array
rowname <- c("Parameter", "Total Phosphorus (µg/L)" , "Total Nitrogen (µg/L)" ,  "Chlorophyll- uncorrected (µg/L)" , "Secchi (ft)" , "Secchi (m)" ,  "Color (Pt-Co Units)" , "Specific Conductance (µS/cm@25 C)" )
#make dataframe with rownames and row values
tbl2df <- data.frame(rowname, mins, maxs, ggmean, n)
#get rid of NA values
tbl2df[tbl2df == "NaN"] <- " "
tbl2df[tbl2df == "NA"] <- " "
tbl2df[tbl2df == "Inf"] <- " "
tbl2df[tbl2df == "-Inf"] <- " "
table_three <- gt(data = tbl2df) %>%
fmt_number(
columns = c(mins, maxs, ggmean),
decimals = 1) %>%
tab_options(column_labels.hidden = TRUE) %>%
opt_table_font(stack = "transitional")  %>%
tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 2
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 3
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 4
)
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and color and specific conductance (collected quarterly)."))
### End from lake RMD####
gtsave(table_three, filename = "table_2.png", path = "~/Documents/GitHub/LWreports/Output/Estuary/output_table")
View(Lake_2)
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond_uS))
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond))
#minimum annual geometric means
mins = c("Minimum Annual Geometric Mean", min(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), min(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
min(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
min(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]),
min(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
min(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]),
min(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#maximum annual geometric means
maxs = c("Maximum Annual Geometric Mean", max(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), max(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
max(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
max(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), max(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
max(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), max(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#grand geometric means
ggmean = c("Grand Geometric Mean", gmean(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), gmean(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
gmean(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
gmean(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), gmean(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
gmean(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), gmean(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond))
#minimum annual geometric means
mins = c("Minimum Annual Geometric Mean", min(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), min(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
min(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
min(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]),
min(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
min(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]),
min(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#maximum annual geometric means
maxs = c("Maximum Annual Geometric Mean", max(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), max(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
max(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
max(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), max(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
max(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), max(byyr$`gmean(Cond_uS)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#grand geometric means
ggmean = c("Grand Geometric Mean", gmean(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), gmean(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
gmean(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
gmean(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), gmean(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
gmean(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), gmean(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#year counts
n = c("n", length(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), length(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
length(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
length(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), length(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
length(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), length(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond_uS)`) == FALSE]))
#add row names to array
rowname <- c("Parameter", "Total Phosphorus (µg/L)" , "Total Nitrogen (µg/L)" ,  "Chlorophyll- uncorrected (µg/L)" , "Secchi (ft)" , "Secchi (m)" ,  "Color (Pt-Co Units)" , "Specific Conductance (µS/cm@25 C)" )
#make dataframe with rownames and row values
tbl2df <- data.frame(rowname, mins, maxs, ggmean, n)
#get rid of NA values
tbl2df[tbl2df == "NaN"] <- " "
tbl2df[tbl2df == "NA"] <- " "
tbl2df[tbl2df == "Inf"] <- " "
tbl2df[tbl2df == "-Inf"] <- " "
table_three <- gt(data = tbl2df) %>%
fmt_number(
columns = c(mins, maxs, ggmean),
decimals = 1) %>%
tab_options(column_labels.hidden = TRUE) %>%
opt_table_font(stack = "transitional")  %>%
tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 2
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 3
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 4
)
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and color and specific conductance (collected quarterly)."))
### End from lake RMD####
gtsave(table_three, filename = "table_2.png", path = "~/Documents/GitHub/LWreports/Output/Estuary/output_table")
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond))
#minimum annual geometric means
mins = c("Minimum Annual Geometric Mean", min(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), min(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
min(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
min(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]),
min(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
min(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]),
min(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#maximum annual geometric means
maxs = c("Maximum Annual Geometric Mean", max(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), max(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
max(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
max(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), max(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
max(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), max(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#grand geometric means
ggmean = c("Grand Geometric Mean", gmean(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), gmean(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
gmean(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
gmean(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), gmean(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
gmean(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), gmean(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#year counts
n = c("n", length(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), length(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
length(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
length(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), length(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
length(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), length(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#add row names to array
rowname <- c("Parameter", "Total Phosphorus (µg/L)" , "Total Nitrogen (µg/L)" ,  "Chlorophyll- uncorrected (µg/L)" , "Secchi (ft)" , "Secchi (m)" ,  "Color (Pt-Co Units)" , "Specific Conductance (µS/cm@25 C)" )
#make dataframe with rownames and row values
tbl2df <- data.frame(rowname, mins, maxs, ggmean, n)
#get rid of NA values
tbl2df[tbl2df == "NaN"] <- " "
tbl2df[tbl2df == "NA"] <- " "
tbl2df[tbl2df == "Inf"] <- " "
tbl2df[tbl2df == "-Inf"] <- " "
table_three <- gt(data = tbl2df) %>%
fmt_number(
columns = c(mins, maxs, ggmean),
decimals = 1) %>%
tab_options(column_labels.hidden = TRUE) %>%
opt_table_font(stack = "transitional")  %>%
tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 2
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 3
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 4
)
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and color and specific conductance (collected quarterly)."))
### End from lake RMD####
gtsave(table_three, filename = "table_2.png", path = "~/Documents/GitHub/LWreports/Output/Estuary/output_table")
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
View(table_three)
View(tbl3df)
View(tbl2df)
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond))
#minimum annual geometric means
mins = c("Minimum Annual Geometric Mean", min(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), min(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
min(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
min(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]),
min(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
min(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]),
min(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == TRUE]))
#maximum annual geometric means
maxs = c("Maximum Annual Geometric Mean", max(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), max(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
max(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
max(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), max(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
max(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), max(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#grand geometric means
ggmean = c("Grand Geometric Mean", gmean(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), gmean(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
gmean(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
gmean(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), gmean(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
gmean(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), gmean(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#year counts
n = c("n", length(byyr$`gmean(TP)`[is.na(byyr$`gmean(TP)`)== FALSE]), length(byyr$`gmean(TN)`[is.na(byyr$`gmean(TN)`) == FALSE]),
length(byyr$`gmean(CHL)`[ is.na(byyr$`gmean(CHL)`) == FALSE]),
length(byyr$`gmean(SECCHI_ft)`[ is.na(byyr$`gmean(SECCHI_ft)`) == FALSE]), length(byyr$`gmean(SECCHI_m)`[is.na(byyr$`gmean(SECCHI_m)`) == FALSE]),
length(byyr$`gmean(Color)`[ is.na(byyr$`gmean(Color)`) == FALSE]), length(byyr$`gmean(Cond)`[is.na(byyr$`gmean(Cond)`) == FALSE]))
#add row names to array
rowname <- c("Parameter", "Total Phosphorus (µg/L)" , "Total Nitrogen (µg/L)" ,  "Chlorophyll- uncorrected (µg/L)" , "Secchi (ft)" , "Secchi (m)" ,  "Color (Pt-Co Units)" , "Specific Conductance (µS/cm@25 C)" )
#make dataframe with rownames and row values
tbl2df <- data.frame(rowname, mins, maxs, ggmean, n)
#get rid of NA values
tbl2df[tbl2df == "NaN"] <- " "
tbl2df[tbl2df == "NA"] <- " "
tbl2df[tbl2df == "Inf"] <- " "
tbl2df[tbl2df == "-Inf"] <- " "
table_three <- gt(data = tbl2df) %>%
fmt_number(
columns = c(mins, maxs, ggmean),
decimals = 1) %>%
tab_options(column_labels.hidden = TRUE) %>%
opt_table_font(stack = "transitional")  %>%
tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 2
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 3
)
) %>%  tab_style(
style =
cell_text(weight = "bold"),
locations = cells_body(
columns = ggmean,
rows = 4
)
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and color and specific conductance (collected quarterly)."))
### End from lake RMD####
gtsave(table_three, filename = "table_2.png", path = "~/Documents/GitHub/LWreports/Output/Estuary/output_table")
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
View(table_two)
View(tbl3df)
View(tbl2df)
View(tbl3df)
View(tbl2df)
View(Lake_2)
View(table_two)
View(tbl3df)
View(tbl2df)
View(tbl2df)
# Project Notes ----
#
### WD and Packages ----
#setwd("/Documents/GitHub/LWreports/.RData")
library(tidyverse)
library(gt)
library(SciViews)
library(broom)
library(glue)
library(ggtext)
library(readxl)
library(tinytex)
#tinytex::install_tinytex()
#tinytex::tlmgr_update()
### Data Import ----
data_1 = read_xlsx("Data/Lakewatch Base File RMD.xlsx")
data_2 = read.csv("Data/All_Data_RMD.csv")
### Functions ----
gmean <- function(x){
xc <- x[!is.na(x)]
xg <- exp(mean(log(xc[xc>0])))
xg <- round(xg)
return(xg)
}
### Data Prep ----
data_1 <- data_1 %>%
mutate(Station = as.character(Station)) %>%
mutate(Narrative_Nutrient_Criteria_Waters = as.character(Narrative_Nutrient_Criteria_Waters)) %>%
mutate(Lake_County = paste(Lake, County)) %>%
filter(Study == "LW") %>%
filter(County == "Gulf") %>%
filter(`water type` == "Lake" | `water type` == "River/Stream" | `water type` == "Estuary"| `water type` == "Spring Boil"| `water type` == "Spring Run"| `water type` == "Dune Lake")
head(data_1)
data_2 = data_2 %>%
mutate(Station = as.character(Station)) %>%
mutate(Lake_County = paste(Lake, County))
head(data_2)
#add na.ignore here to avoid loop error when no data exists for a lake
data_all <- data_1 %>% full_join(data_2, by = c("Lake_County", "Station"))
head(data_all)
### for loop with counter ----
#Run ONE of these two lines
#Lakes = unique(data_1$Lake_County)
Lakes = c("St. Joseph Bay-1 Gulf")
print(Lakes)
n_count = 1
N_count = length(Lakes)
for(l in Lakes){
#subsets data for lake of interest
Lake_1 <- data_1 %>%
filter(Lake_County == l)
Lake_2 <- data_2 %>%
filter(Lake_County == l)
file_name = paste(Lake_2[1], ".pdf")
#adding a column using if/else for lake classification
##this code currently has no fallback for if the data is missing.
Lake_2 = Lake_2 %>% mutate(lake_class = ifelse(
gmean(`Color`) > 40, "Colored", ifelse(
gmean(`Color`) <= 40 & gmean(`Cond_uS`) <= 20, "Clear Soft Water","Clear Hard Water")))
#adding a column using if/else for trophic state
Lake_2 = Lake_2 %>% mutate(trophic_state = ifelse(
gmean(CHL) < 3, "Oligotrophic", ifelse(
gmean(CHL) >= 3 & gmean(CHL) < 7, "Mesotrophic", ifelse(
gmean(CHL) >= 7 & gmean(CHL) < 40, "Eutrophic", "Hypereutrophic"))))
if(Lake_1$`water type`[1] == "Lake") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code Lake.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/Lake",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
if(Lake_1$`water type`[1] == "Dune Lake") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code Lake.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/Lake",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
if(Lake_1$`water type`[1] == "Estuary") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code Estuary.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/Estuary",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
if(Lake_1$`water type`[1] == "River/Stream") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code RiverStream.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/RiverStream",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
if(Lake_1$`water type`[1] == "Spring Boil") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code RiverStream.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/RiverStream",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
if(Lake_1$`water type`[1] == "Spring Run") {
rmarkdown::render(input = "Scripts/LWReport Markdown Code RiverStream.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "Output/RiverStream",                       # 4. Define an output folder/directory
params = list(Lakes = l))  }
#counter
print(Lake_2$Lake_County[1])
print(paste(n_count, "/", N_count))
n_count <- n_count+1
}
knitr::include_graphics("~/Documents/GitHub/LWreports/Output/Estuary/output_table/table_2.png")
View(Lake_2)
View(byyr)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
group_by(Year) %>%
summarize(gmean(TP), gmean(TN), gmean(CHL), gmean(SECCHI_ft), gmean(SECCHI_m), gmean(Color), gmean(Cond))
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) %>%
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS) )
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
mutate(Cond = Cond_uS+Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Cond_uS,Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
#geometric means by year
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyrs <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyrs <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyrs <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3) %>%
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
#mutate(Cond = Cond_uSCond_mS)
byyr$Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
# group_by(Year) %>%
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
mutate(Cond = paste0(Lake_2$Cond_uS,Lake_2$Cond_mS)
byyr <- Lake_2 %>%
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
mutate(Cond = Lake_2$Cond_uS+Lake_2$Cond_mS)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
unite("Cond", Cond_uS:Cond_mS, na.rm = TRUE, remove = FALSE)
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
#Add a column
byyr1<- byyr%>%
byyr1$Cond = paste0(byyr1$Cond_uS, byyr1$Cond_mS,"F")
byyr1<- byyr%>%
byyr1<- byyr%>%
byyr1$Cond = paste0(byyr1$Cond_uS, byyr1$Cond_mS,"F")
byyr <- Lake_2 %>%
mutate(SECCHI_m = SECCHI_ft*.3)
#Add a column
byyr1<- byyr%>%
