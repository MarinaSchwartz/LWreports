tinytex::tlmgr_update()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gt)
data = read_csv("All_Data.csv")
data_test = data %>% filter(Lake == "Alice")
data_means = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = mean(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = mean(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = mean(CHL, na.rm = TRUE),
"Secchi (ft)" = mean(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = mean(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = mean(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = mean(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "mean") %>% select(-Lake)
data_mins = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = min(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = min(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = min(CHL, na.rm = TRUE),
"Secchi (ft)" = min(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = min(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = min(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = min(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "min") %>% select(-Lake)
data_max = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = max(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = max(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = max(CHL, na.rm = TRUE),
"Secchi (ft)" = max(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = max(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = max(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = max(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "max") %>% select(-Lake)
data_combined = full_join(data_mins,data_max, by = "parameter")
data_combined = full_join(data_combined,data_means, by = "parameter")
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter"
)
table_test
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter",
min = "Minimum Annual Geometric Means",
max = "Maximum Annual Geometric Means",
mean = "Grand Geometric Mean"
)
table_test
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter",
min = "Minimum<br>Annual Geometric Means",
max = "Maximum Annual Geometric Means",
mean = "Grand Geometric Mean",
.fn = md
)
table_test
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter",
min = "Minimum<br>Annual Geometric Means",
max = "Maximum<br>Annual Geometric Means",
mean = "Grand Geometric Mean",
.fn = md
) %>% fmt_number(
columns = vars(min, max, mean),
decimals = 2
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and classification variables color and specific conductance (collected quarterly). Values in bold can be used with Table 1 to evaluate compliance with nutrient criteria."))
table_test
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter",
min = "Minimum<br>Annual Geometric Means",
max = "Maximum<br>Annual Geometric Means",
mean = "Grand Geometric Mean",
.fn = md
) %>% fmt_number(
columns = c(min, max, mean),
decimals = 2
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and classification variables color and specific conductance (collected quarterly). Values in bold can be used with Table 1 to evaluate compliance with nutrient criteria."))
table_test
table_test <- gt(data = data_combined) %>% cols_label(
parameter = "Parameter",
min = "Minimum<br>Annual Geometric Means",
max = "Maximum<br>Annual Geometric Means",
mean = "Grand<br>Geometric Mean",
.fn = md
) %>% fmt_number(
columns = c(min, max, mean),
decimals = 1
) %>% tab_header(
title = md("**Table 2.** Long-term trophic state data collected monthly by LAKEWATCH volunteers and classification variables color and specific conductance (collected quarterly). Values in bold can be used with Table 1 to evaluate compliance with nutrient criteria."))
table_test
data_means = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = mean(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = mean(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = mean(CHL, na.rm = TRUE),
"Secchi (ft)" = mean(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = mean(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = mean(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = mean(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "mean") %>% select(-Lake)
data_mins = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = min(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = min(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = min(CHL, na.rm = TRUE),
"Secchi (ft)" = min(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = min(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = min(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = min(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "min") %>% select(-Lake)
data_max = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = max(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = max(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = max(CHL, na.rm = TRUE),
"Secchi (ft)" = max(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = max(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = max(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = max(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "max") %>% select(-Lake)
data_years = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = count(TP, na.rm = TRUE),
"Total Nitrogen (µg/L)" = count(TN, na.rm = TRUE),
"Chlorophyll- uncorrected (µg/L)" = count(CHL, na.rm = TRUE),
"Secchi (ft)" = count(SECCHI_ft, na.rm = TRUE),
"Secchi (m)" = count(SECCHI_ft, na.rm = TRUE)*0.3,
"Color (Pt-Co Units)" = count(Color, na.rm = TRUE),
"Specific Conductance (µS/cm@25 C)" = count(Cond_uS, na.rm = TRUE),
) %>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "max") %>% select(-Lake)
View(data_test)
data_years = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = n()
data_years = data_test %>% group_by(Lake) %>% summarise(
data_years = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = n(),
) #%>% pivot_longer(cols = 2:8, names_to = "parameter",values_to = "max") %>% select(-Lake)
View(data_years)
View(data_test)
ata_years = data_test %>% group_by(Lake, Year) %>% summarise(
"Total Phosphorus (µg/L)" = sum(is.na(TP))
)
data_years = data_test %>% group_by(Lake, Year) %>% summarise(
"Total Phosphorus (µg/L)" = sum(is.na(TP))
)
View(data_years)
View(data_years)
data_years = data_test %>% group_by(Lake) %>% summarise(
"Total Phosphorus (µg/L)" = sum(is.na(TP))
)
View(data_years)
### Import Libraries ###
library(readxl)
library(tidyverse)
### Loading and Preparing Data
data_1 = read_xlsx("Lakewatch Base File 10-24-2023.xlsx")
data_1 <- data_1 %>%
mutate(Lake_County = paste(Lake, County)) %>%
filter(Study == "LW") %>%
filter(`water type` == "Lake")
head(data_1)
data_2 = read.csv("All_Data.csv")
data_2 = data_2 %>%
mutate(Station = as.character(Station)) %>%
mutate(Lake_County = paste(Lake, County))
head(data_2)
data_all <- data_1 %>% full_join(data_2, by = c("Lake_County", "Station"))
Lakes = unique(data_all$Lake_County)
print(Lakes)
n = 1
N = length(Lakes)
### for loop with counter ###
for(l in Lakes){
#subsets data for lake of interest
Lake <- data_all %>%
filter(Lake_County == l)
file_name = paste(Lake[1], ".pdf")
########################################################
###put code for knitting pdf from markdown code here###
#rmarkdown::render("LWReport Markdown Code.Rmd", params = list(
#file = filename))
###this section doesn't work right now, but the for loop works
########################################################
#counter
print(Lake$Lake_County[1])
print(paste(n, "/", N))
n <- n+1
}
### Import Libraries ###
library(readxl)
### Set WD ###
#path <- "C:/Users/amber.riner/Documents/LWreports"
#setwd(path)
### Import Libraries ###
library(readxl)
library(tidyverse)
library(tinytex)
#tinytex::install_tinytex()
#tinytex::tlmgr_update()
### Loading and Preparing Data
data_1 = read_xlsx("Lakewatch Base File 10-24-2023.xlsx")
data_1 <- data_1 %>%
mutate(Lake_County = paste(Lake, County)) %>%
filter(Study == "LW") %>%
filter(`water type` == "Lake")
head(data_1)
data_2 = read.csv("All_Data.csv")
data_2 = data_2 %>%
mutate(Station = as.character(Station)) %>%
mutate(Lake_County = paste(Lake, County))
head(data_2)
#data_all <- data_1 %>% full_join(data_2, by = c("Lake_County", "Station"))
#Lakes = unique(data_2$Lake_County)
Lakes = c("Alice Alachua", "Bivans Arm Alachua")
print(Lakes)
n = 1
N = length(Lakes)
### for loop with counter ###
for(l in Lakes){
#subsets data for lake of interest
Lake_1 <- data_1 %>%
filter(Lake_County == l)
Lake_2 <- data_2 %>%
filter(Lake_County == l)
file_name = paste(Lake_2[1], ".pdf")
########################################################
###put code for knitting pdf from markdown code here###
rmarkdown::render(input = "LWReport Markdown Code.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "output",                       # 4. Define an output folder/directory
params = list(Lakes = l))
########################################################
#counter
print(Lake_2$Lake_County[1])
print(paste(n, "/", N))
n <- n+1
}
### Set WD ###
#path <- "C:/Users/amber.riner/Documents/LWreports"
#setwd(path)
### Import Libraries ###
library(readxl)
library(tidyverse)
library(tinytex)
#tinytex::install_tinytex()
#tinytex::tlmgr_update()
### Loading and Preparing Data
data_1 = read_xlsx("Lakewatch Base File 10-24-2023.xlsx")
data_1 <- data_1 %>%
mutate(Lake_County = paste(Lake, County)) %>%
filter(Study == "LW") %>%
filter(`water type` == "Lake")
head(data_1)
data_2 = read.csv("All_Data.csv")
data_2 = data_2 %>%
mutate(Station = as.character(Station)) %>%
mutate(Lake_County = paste(Lake, County))
head(data_2)
#data_all <- data_1 %>% full_join(data_2, by = c("Lake_County", "Station"))
#Lakes = unique(data_2$Lake_County)
Lakes = c("Alice Alachua", "Bivans Arm Alachua")
print(Lakes)
n = 1
N = length(Lakes)
### for loop with counter ###
for(l in Lakes){
#subsets data for lake of interest
Lake_1 <- data_1 %>%
filter(Lake_County == l)
Lake_2 <- data_2 %>%
filter(Lake_County == l)
file_name = paste(Lake_2[1], ".pdf")
########################################################
###put code for knitting pdf from markdown code here###
rmarkdown::render(input = "LWReport Markdown Code.Rmd", output_format = "pdf_document",         # 2. Establish the format
output_file = paste0(l ,"_report.pdf"), # 3. Define the output file name
output_dir = "output",                       # 4. Define an output folder/directory
params = list(Lakes = l))
########################################################
#counter
print(Lake_2$Lake_County[1])
print(paste(n, "/", N))
n <- n+1
}
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
knitr::include_graphics("LW Reports Table 1 V.2.png")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
knitr::include_graphics("LW Reports Table 1 V.2.png")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
warning()
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
knitr::include_graphics("output/output_table/table_3.png")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
N = length(Lakes)
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
glue("Florida LAKEWATCH Report for {Lake_2$Lake[1]} in {Lake_2$County[1]} County Using Data Downloaded {Sys.Date()}")
?Sys.Date
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
glue("Florida LAKEWATCH Report for {Lake_2$Lake[1]} in {Lake_2$County[1]} County Using Data Downloaded {date}")
?glue
## `report_title`
Florida LAKEWATCH Report for «Lake» in «County» County Using Data Downloaded 12/9/2022
report_title = glue("Florida LAKEWATCH Report for {Lake_2$Lake[1]} in {Lake_2$County[1]} County Using Data Downloaded {date}", )
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
report_title = glue("Florida LAKEWATCH Report for {Lake_2$Lake[1]} in {Lake_2$County[1]} County Using Data Downloaded {date}", )
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
#getting date
date = Sys.Date()
format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
#getting date
date = Sys.Date()
date = format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
report_title = glue("Florida LAKEWATCH Report for {Lake_2$Lake[1]} in {Lake_2$County[1]} County Using Data Downloaded {date}", )
#getting date
date = Sys.Date()
date = format(date, format="%B %d %Y")
##for what ever reason this chunk is ignoring the echo and message flags global options. set it manuelly to false
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
source("~/Library/CloudStorage/OneDrive-Personal/lakewatch report/LWreports/LW_For_Loop.R")
